#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

die() {
    echo "‚ùå $*" >&2
    exit 1
}

if [[ ! -f .env ]]; then
    die ".env –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

sed -i 's/\r$//' .env

ROOT_PROJECTS_FOLDER=$(grep -E '^ROOT_PROJECTS_FOLDER=' .env | cut -d '=' -f2- | xargs)
if [[ -z "${ROOT_PROJECTS_FOLDER}" ]]; then
    die "ROOT_PROJECTS_FOLDER –Ω–µ –∑–∞–¥–∞–Ω –≤ .env"
fi

mkdir -p "${ROOT_PROJECTS_FOLDER}"
mkdir -p build

BIN_NAME="sudoku"
echo "üöÄ –°–æ–±–∏—Ä–∞—é –ø—Ä–æ–µ–∫—Ç..."
go build -o "build/${BIN_NAME}" ./cmd/main.go

TARGET="${ROOT_PROJECTS_FOLDER}/${BIN_NAME}"
cp -f "build/${BIN_NAME}" "${TARGET}"
echo "‚úÖ –ë–∏–Ω–∞—Ä–Ω–∏–∫ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤: ${TARGET}"

cp -f .env "${ROOT_PROJECTS_FOLDER}/.env"
echo "‚úÖ .env —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤: ${ROOT_PROJECTS_FOLDER}/.env"

CONFIG_DIR="sudoku-config"
CONFIG_TARGET="${ROOT_PROJECTS_FOLDER}/${CONFIG_DIR}"

if [[ ! -d "${CONFIG_TARGET}" ]]; then
    if [[ -d "${CONFIG_DIR}" ]]; then
        cp -r "${CONFIG_DIR}" "${CONFIG_TARGET}"
        echo "‚úÖ –ü–∞–ø–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤: ${CONFIG_TARGET}"
    else
        echo "‚ö†Ô∏è –ü–∞–ø–∫–∞ ${CONFIG_DIR} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –ø—Ä–æ–ø—É—Å–∫–∞—é –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
    fi
else
    echo "‚ÑπÔ∏è –ü–∞–ø–∫–∞ ${CONFIG_DIR} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ä—É—Ç–µ, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ"
fi

COMPOSE_SOURCE="${CONFIG_DIR}/compose.yaml"
COMPOSE_TARGET="${ROOT_PROJECTS_FOLDER}/compose.yaml"

if [[ -f "${COMPOSE_SOURCE}" ]]; then
    if [[ ! -f "${COMPOSE_TARGET}" ]]; then
        cp -f "${COMPOSE_SOURCE}" "${COMPOSE_TARGET}"
        echo "‚úÖ compose.yaml —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤: ${COMPOSE_TARGET}"
    else
        echo "‚ÑπÔ∏è compose.yaml —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ä—É—Ç–µ, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ"
    fi
else
    echo "‚ö†Ô∏è compose.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ${CONFIG_DIR}, –ø—Ä–æ–ø—É—Å–∫–∞—é –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
fi

rm -rf build
